name: Pull Request Checks

on:
 pull_request:
  branches: [main, develop]

env:
 NODE_VERSION: "18.x"

jobs:
 validate:
  name: Validate Changes
  runs-on: ubuntu-latest

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Setup Node.js
     uses: actions/setup-node@v4
     with:
      node-version: ${{ env.NODE_VERSION }}

   - name: Install dependencies
     run: |
      npm ci
      npm run install:frontend
      npm run install:backend

   - name: Setup Prisma
     run: |
      cd backend
      npx prisma generate --schema=../prisma/schema.prisma

   - name: Lint frontend
     run: |
      cd frontend
      npx eslint src --max-warnings 0 || echo "Linting completed with warnings"

   - name: Type check frontend
     run: |
      cd frontend
      npx tsc --noEmit

   - name: Test frontend
     run: npm run test:frontend
     env:
      CI: true

   - name: Check environment variables
     run: |
      echo "Checking environment variables for PR checks..."
      if [ -n "${{ vars.DATABASE_URL }}" ]; then
        echo "✅ DATABASE_URL is set"
      else
        echo "⚠️ DATABASE_URL not set, using fallback for PR checks"
      fi
      if [ -n "${{ vars.OPENAI_API_KEY }}" ]; then
        echo "✅ OPENAI_API_KEY is set"
      else
        echo "⚠️ OPENAI_API_KEY not set, using fallback for PR checks"
      fi
     continue-on-error: true

   - name: Test backend
     run: npm run test:backend
     env:
      CI: true
      DATABASE_URL: ${{ vars.DATABASE_URL || 'file:./test.db' }}
      OPENAI_API_KEY: ${{ vars.OPENAI_API_KEY || 'test-key' }}

   - name: Security audit
     run: |
      npm audit --audit-level=moderate || echo "Root audit completed with warnings"
      cd frontend && npm audit --audit-level=moderate || echo "Frontend audit completed with warnings"
      cd ../backend && npm audit --audit-level=moderate || echo "Backend audit completed with warnings"
